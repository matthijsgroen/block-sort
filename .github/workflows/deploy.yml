# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  check-version:
    runs-on: ubuntu-latest

    outputs:
      version_changed: ${{ steps.check_version.outputs }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq (JSON parser)
        run: sudo apt-get install -y jq

      - name: Get current version
        id: current_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Get previous version
        id: previous_version
        run: |
          git fetch --depth=2 origin
          PREV_COMMIT=$(git log -2 --format="%H" | tail -n 1)
          PREV_PACKAGE=$(git show $PREV_COMMIT:package.json || echo "{}")
          echo "version=$(echo $PREV_PACKAGE | jq -r .version)" >> $GITHUB_OUTPUT

      - name: Check version change
        id: check_version
        run: |
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version did not change"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
        env:
          CURRENT_VERSION: ${{ steps.current_version.outputs.version }}
          PREVIOUS_VERSION: ${{ steps.previous_version.outputs.version }}

  deploy:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: "./dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
